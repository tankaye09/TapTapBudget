/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module regfile_3 (
    input clk,
    input rst,
    input [15:0] read_address_1,
    input [15:0] read_address_2,
    output reg [15:0] read_data_1,
    output reg [15:0] read_data_2,
    output reg [15:0] life_data,
    output reg [15:0] score_data,
    output reg [15:0] cycle_counter_data,
    output reg [15:0] col_1,
    output reg [15:0] col_2,
    output reg [15:0] col_3,
    output reg [15:0] col_4,
    input [15:0] write_address,
    input [15:0] write_data,
    input write_enable
  );
  
  
  
  reg [255:0] M_registers_d, M_registers_q = 1'h0;
  
  always @* begin
    M_registers_d = M_registers_q;
    
    read_data_1 = M_registers_q[(read_address_1)*16+15-:16];
    read_data_2 = M_registers_q[(read_address_2)*16+15-:16];
    life_data = M_registers_q[96+15-:16];
    score_data = M_registers_q[80+15-:16];
    cycle_counter_data = M_registers_q[112+15-:16];
    col_1 = M_registers_q[0+15-:16];
    col_2 = M_registers_q[16+15-:16];
    col_3 = M_registers_q[32+15-:16];
    col_4 = M_registers_q[48+15-:16];
    if (write_enable) begin
      M_registers_d[(write_address)*16+15-:16] = write_data;
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_registers_q <= 1'h0;
    end else begin
      M_registers_q <= M_registers_d;
    end
  end
  
endmodule

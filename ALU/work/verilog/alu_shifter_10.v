/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module alu_shifter_10 (
    input [1:0] alufn,
    input [15:0] a,
    input [15:0] b,
    output reg [15:0] q
  );
  
  
  
  wire [16-1:0] M_shiftleft_q;
  reg [16-1:0] M_shiftleft_a;
  reg [4-1:0] M_shiftleft_b;
  alu_shiftleft_27 shiftleft (
    .a(M_shiftleft_a),
    .b(M_shiftleft_b),
    .q(M_shiftleft_q)
  );
  
  wire [16-1:0] M_shiftright_q;
  reg [16-1:0] M_shiftright_a;
  reg [4-1:0] M_shiftright_b;
  reg [1-1:0] M_shiftright_alufn1;
  alu_shiftright_28 shiftright (
    .a(M_shiftright_a),
    .b(M_shiftright_b),
    .alufn1(M_shiftright_alufn1),
    .q(M_shiftright_q)
  );
  
  always @* begin
    M_shiftright_a = 1'h0;
    M_shiftright_b = 1'h0;
    M_shiftright_alufn1 = 1'h0;
    M_shiftleft_a = 1'h0;
    M_shiftleft_b = 1'h0;
    
    case (alufn[0+0-:1])
      1'h0: begin
        M_shiftleft_a = a;
        M_shiftleft_b = b[0+3-:4];
        if (b >= 5'h10) begin
          q = 16'h0000;
        end else begin
          q = M_shiftleft_q;
        end
      end
      1'h1: begin
        M_shiftright_alufn1 = alufn[1+0-:1];
        M_shiftright_a = a;
        M_shiftright_b = b[0+3-:4];
        if (b >= 5'h10) begin
          if (alufn[1+0-:1] == 1'h0) begin
            q = 16'h0000;
          end else begin
            q = {5'h10{a[15+0-:1]}};
          end
        end else begin
          q = M_shiftright_q;
        end
      end
      default: begin
        M_shiftleft_a = a;
        M_shiftleft_b = b[0+3-:4];
        q = M_shiftleft_q;
      end
    endcase
  end
endmodule

/*
   This file was generated automatically by Alchitry Labs version 1.2.1.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module score_to_4_digits_1 (
    input [15:0] score,
    output reg [15:0] digits
  );
  
  
  
  wire [(3'h4+0)*16-1:0] M_mod_q;
  reg [(3'h4+0)*16-1:0] M_mod_a;
  reg [(3'h4+0)*16-1:0] M_mod_b;
  
  genvar GEN_mod0;
  generate
  for (GEN_mod0=0;GEN_mod0<3'h4;GEN_mod0=GEN_mod0+1) begin: mod_gen_0
    alu_mod_13 mod (
      .a(M_mod_a[GEN_mod0*(5'h10)+(5'h10)-1-:(5'h10)]),
      .b(M_mod_b[GEN_mod0*(5'h10)+(5'h10)-1-:(5'h10)]),
      .q(M_mod_q[GEN_mod0*(5'h10)+(5'h10)-1-:(5'h10)])
    );
  end
  endgenerate
  
  always @* begin
    M_mod_a[0+15-:16] = score;
    M_mod_b[0+15-:16] = 4'ha;
    digits[0+3-:4] = M_mod_q[0+15-:16];
    M_mod_a[16+15-:16] = score;
    M_mod_b[16+15-:16] = 7'h64;
    digits[4+3-:4] = (M_mod_q[16+15-:16] - M_mod_q[0+15-:16]) / 4'ha;
    M_mod_a[32+15-:16] = score;
    M_mod_b[32+15-:16] = 10'h3e8;
    digits[8+3-:4] = (M_mod_q[32+15-:16] - M_mod_q[16+15-:16]) / 7'h64;
    M_mod_a[48+15-:16] = score;
    M_mod_b[48+15-:16] = 14'h2710;
    digits[12+3-:4] = (M_mod_q[48+15-:16] - M_mod_q[32+15-:16]) / 10'h3e8;
  end
endmodule

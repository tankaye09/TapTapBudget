module alu_shiftleft ( // SHIFTS A BY UP TO 15 BITS TO THE LEFT
    input a[16],
    input b[4],
    output q[16] // output shift
  ) {
  sig w[16];
  sig x[16];
  sig y[16];
  always {
    case(b[3]){ // shifts 8 bits
      b0:
          w = a;
      b1:
          w[15:8] = a[7:0];
          w[7:0] = 8b0; 
      default:
          w = a;        
    }
    case(b[2]){ // shifts 4 bits
      b0:
          x = w;
      b1:
          x[15:4] = w[11:0];
          x[3:0] = 4b0;
      default:
          x = w;
    }
    case(b[1]){ // shifts 2 bits
      b0:
          y = x;
      b1:
          y[15:2] = x[13:0];
          y[1:0] = 2b0;
      default:
          y = x;
    }
    case(b[0]){ // shifts 1 bit
      b0:
          q = y;
      b1:
          q[15:1] = y[14:0];
          q[0] = b0;
      default:
          q = y;
    }
  }
}